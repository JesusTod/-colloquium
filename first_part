import numpy as np
import math
import random
# 1. Введіть з клавіатури в масив п'ять цілочисельних значень. Виведіть їх в
# один рядок через кому. Отримайте для масиву середнє арифметичне.
a = np.array((1, 2, 3, 4, 5))
seredne = 0
for i in range(len(a)):     # вводимо з клавіатури 5 чисел
    a[i] = input()
for j in range(5):          # виводимо ці числа через кому
    print(a[j], end=', ')
    seredne += a[j]         # додаємо ці числа в seredne для знаходження середього арифметичного
print('Середнє арифметичне =',seredne/5)

####################################################################################################################
# 2. Введіть з клавіатури п'ять цілочисельних елементів масиву X. Виведіть на
# екран значення коріння і квадратів кожного з елементів масиву.
X = np.array((1, 2, 3, 4, 5))
for i in range(len(X)):
    X[i] = int(input('Введіть число:'))                        # вводимо числа в масив
    print('Корінь:',math.sqrt(X[i]),'Квадрат:', X[i]*X[i])     # виводимо корінь і квадрат щойно заданого числа

####################################################################################################################
# 3. Створіть масив з п'яти прізвищ і виведіть їх на екран стовпчиком,
# починаючи з останнього.
a = np.array(('Медуниця', 'Мельник', 'Бабій', 'Дужак', 'Дудук'))
k = 1
while k != 6:       # циклічно виводимо всі значення починаючи з кінця
    print(a[-k])
    k += 1

####################################################################################################################
# 4. Створіть масив з п'яти прізвищ і виведіть на екран ті з них, які
# починаються з певної букви, яка вводиться з клавіатури.
a = np.array(('Медуниця', 'Мельник', 'Бабій', 'Дужак', 'Дудук'))
g = input()
for i in range(len(a)):         # циклічно проходимося по елементах масиву
    if a[i][0] == g:            # якщо перша буква слова == заданій, то ми це слово виводимо
        print(a[i])

####################################################################################################################
# 5. Створіть масив А [1..7] за допомогою генератора випадкових чисел і
# виведіть його на екран. Збільште всі його елементи в 2 рази.
a = np.zeros(7, dtype=int)
for i in range(len(a)):
    a[i] = random.randint(1,10)
    a[i] = a[i] * 2
print(a)

####################################################################################################################
# 6.Створіть масив А [1..8] за допомогою генератора випадкових чисел з елементами від -10 до 10 і виведітьйого на екран.
# Підрахуйте кількість від’ємних елементів масиву.
a = np.zeros(8,dtype=int)
count = 0
for i in range(len(a)):
    a[i] = random.randint(-10,10)           # генеруємо рандомні числа в масиві
    if a[i] < 0:                            # якщо це число меньше 0 то count += 1
        count += 1
print(a)
print(count)

####################################################################################################################
# 7. Створіть масив А [1..12] за допомогою генератора випадкових чисел з
# елементами від -20 до 10 і виведіть його на екран. Замініть всі від’ємні елементи
# масиву числом 0.
a = np.zeros(12,dtype=int)                  # створили масив де всі елементи нулі
for i in range(len(a)):
    a[i] = random.randint(-20,10)           # генеруємо числа від -20 до 10 в масиві
    if a[i] < 0:                            # якщо значення яке ми щойно згенерували меньше нуля, то заміняємо його на 0
        a[i] = 0
print(a)

####################################################################################################################
# 8. Створіть цілочисельний масив А [1..15] за допомогою генератора
# випадкових чисел з елементами від -15 до 30 і виведіть його на екран. Визначте
# найбільший елемент масиву і його індекс.
a = np.zeros(15,dtype=int)              # створили масив де всі елементи == 0
for i in range(len(a)):
    a[i] = random.randint(-15,30)       # рандомно заповнюємо масив значеннями від -15 до 30
    if a[i] == max(a):                  # шукаємо індекс максимального значення в масиві
        number = i
print(a)
print('Максимальний елемент:',max(a),'Його індекс:', number)

####################################################################################################################
# 9. З 8 до 20 години температура повітря вимірювалася щогодини. Відомо,
# що протягом цього часу температура знижувалася. Визначте, о котрій годині було
# вперше зафіксовано від'ємну температуру.
a = np.array((9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2))
for i in range(len(a)):                                 # перебираємо значення масиву
    if a[i] < 0:                                        # якщо температура меньше нуля, то виводимо це значення
        print('Вперше температура меньше нуля була зафіксоована о',i+8,'годині')
        break                                           # та перериваємо роботу циклу

####################################################################################################################
# 10. Дані про температуру повітря за декаду листопада зберігаються в масиві.
# Визначити, скільки разів температура опускалася нижче -10 градусів.
a = np.array((5, 4, 3, 2, 1, 0, -1, -2, -3, -4))
summa = 0
for i in range(len(a)):         # перебираємо всі значення масиву
    if a[i] < 0:                # якщо i-те значення меньше нуля, то добвялємо в summa 1
        summa += 1
print(summa)

####################################################################################################################
# 11. Дані про температуру води на Чорноморському узбережжі за декаду
# вересня зберігаються в масиві. Визначити, скільки за цей час було днів, придатних для
# купання.
a = np.array((25, 23, 26, 18, 22, 19, 16, 12, 9, 14))
days = 0
for i in range(len(a)):                     # перебираємо всі значення масиву
    if a[i] > 20:                           # якщо температура більше 20, то days += 1
        days += 1
print('Днів придатніх для купання:',days)

####################################################################################################################
# 12. Дані про температуру повітря за декаду грудня зберігаються в масиві.
# Визначити, скільки раз температура була вище середньої за цю декаду.
a = np.array((2, 4, 0, -2, -1, -2, -1, 1, -0, 3))
summa = 0
for i in range(len(a)):      # перебираємо і додаємо всі значення в змінну summa для знаходження середього арифметичного
    summa += a[i]
count = 0
for j in range(len(a)):          # порівнюємо покроково всі елементи масиву з середнім арифметичним
    if a[j] > summa/len(a):      # якщо елемент більше середнього арифметичного то count += 1
        count += 1
print(count)

####################################################################################################################
# 13. Створіть масив з 15 цілочисельних елементів і визначте серед них
# мінімальне значення.
a = np.zeros(15,dtype=int)                  # масив де всі 15 значень є нулями
for i in range(len(a)):
    a[i] = random.randint(-11,22)           # створюємо рандомні значення в масиві від -11 до 22
print(a)
print('Найменше:',min(a))                   # за допомогою min() визначаємо мінімальне значення

####################################################################################################################
# 14. Сформуйте лінійний масив дійсних чисел, елементи якого є відстанями,
# пройденими тілом при вільному падінні на землю за 1, 2, ..., 10 с.
a = np.zeros(10,dtype=int)      # масив, 10 значень, всі нулі
for i in range(len(a)):
    s = (9.8* i**2)/2           # покроково збільшуємо швидкість по формулі
    a[i-1] = s
print(a)

####################################################################################################################
# 15. Знайти суму парних елементів масиву цілих чисел. Розмірність масиву -
# 20. Заповнення масиву здійснити випадковими числами від 100 до 200.
a = np.zeros(20,dtype=int)              # масив, 20 елементів == 0
summa = 0
for i in range(len(a)):
    a[i] = random.randint(100,200)      # заміняємо нулі на рандомні значення від 100 до 200
    if a[i] % 2 == 0:                   # якщо елемент кратний двом, то добавляємо його в суму
        summa += a[i]
print('Сумма парних елементів дорівнює',summa)

####################################################################################################################
# 16. Знайти добуток елементів масиву цілих чисел, які кратні 7. Розмірність
# масиву - 15. Заповнення масиву здійснити випадковими числами від 10 до 50.
a = np.zeros(15,dtype=int)              # масив, 15 елементів, всі нулі
dobytok = 1
for i in range(len(a)):                 # покроково замінюємо нулі на значення від 10 до 50
    a[i] = random.randint(10,50)
    if a[i] % 7 == 0:                   # якщо число кратне 7, то домножаємо його в dobytok
        dobytok *= a[i]
print('Сумма чисел кратних 7 дорівнює',dobytok)

####################################################################################################################
# 17. Знайти суму елементів масиву дійсних чисел, що мають непарні номери.
# Розмірність масиву - 20. Заповнення масиву здійснити випадковими числами від 100
# до 200.
a = np.zeros(20,dtype=int)              # масив, 20 елементів, всі нулі
summa = 0
for i in range(len(a)):
    a[i] = random.randint(100,200)      # замінюємо нулі в масиві на значення від 100 до 200
    if i % 2 != 0:                      # якщо індекс числа не кратний двом, то добавляємо його в summa
        summa += a[i]
print('Сумма =',summa)

####################################################################################################################
# 18. Знайти добуток всіх елементів масиву цілих чисел, менших 0. Розмірність
# масиву - 10. Заповнення масиву здійснити за допомогою клавіатури.
a = np.zeros(10,dtype=int)              # масив, 10 елеменів, всі нулі
summa = 0
for i in range(len(a)):                 # перебираємо всі елементи масиву
    a[i] = int(input())                 # замінюємо їх на введені з клавіатури
    if a[i] < 0:                        # якщо вони меньше нуля, то добавляємо їх в суму
        summa += a[i]
print('Сумма =',summa)
####################################################################################################################
# 19. Знайти суму всіх елементів масиву цілих чисел що задовольняють умові:
# остача від ділення на 2 дорівнює 3. Розмірність масиву - 20. Заповнення масиву
# здійснити випадковими числами від 200 до 300.
a = np.zeros(20,dtype=int)          # масив, 20 елеменів, всі нулі
summa = 0
for i in range(len(a)):             # міняємо нулі на значення від 200 до 300
    a[i] = random.randint(200,300)
    if a[i] % 2 == 3:               # якщо остача від ділення на 2 == 3, то добавляємо елемент в summa
        summa += a[i]
print('Сумма =', summa)

####################################################################################################################
# 20. Знайти суму всіх елементів масиву дійсних чисел, більших за задане
# число. Розмірність масиву - 20. Заповнення масиву здійснити випадковими числами від 50 до 100.
a = np.zeros(20,dtype=float)            # масив, 20 елементів, всі нулі
summa = 0
G = input()
for i in range(len(a)):                 # замінюємо покроково всі елементи на числа від 50 до 100
    a[i] = random.uniform(50,100)
    if float(a[i]) > float(G):          # якщо число дільше за задане, то добавляємо його в summa
        summa += a[i]
print(summa)

####################################################################################################################
# 21. Знайти добуток всіх елементів масиву дійсних чисел, менших заданого
# числа. Розмірність масиву - 10. Заповнення масиву здійснити випадковими числами
# від 50 до 100.
a = np.zeros(10)                # масив, 10 елементів, всі нулі
dobytok = 1
G = input()
for i in range(len(a)):         # замінюємо значення в масиві на рандомні від 50 до 100
    a[i] = random.uniform(50,100)
    if a[i] < float(G):         # якщо елемент меньше за задане число, до домножаємо цей елемент в dobytok
        dobytok *= a[i]
print('Добуток =', dobytok)

####################################################################################################################
# 22. Знайти добуток елементів масиву, кратних 3 і 9. Розмірність масиву - 10.
# Заповнення масиву здійснити випадковими числами від 5 до 500.
a = np.zeros(10,dtype=int)          # масив, 10, всі нулі
dobytok = 1
for i in range(len(a)):
    a[i] = random.randint(5,500)    # заміняємо всі нулі на значення від 5 до 500
    if a[i] % 3 == 0:               # якщо елемент кратний 3, то домножаємо його в dobytok
        dobytok *= a[i]
print('Добуток =',dobytok)

####################################################################################################################
# 23. Знайти суму всіх елементів масиву цілих чисел, які менше середнього
# арифметичного елементів масиву. Розмірність масиву - 20. Заповнення масиву
# здійснити випадковими числами від 150 до 300.
a = np.zeros(20,dtype=int)                  # масив, 20 елеменів, всі нулі
summa = 0
seredne = 0
for i in range(len(a)):                     # рандомно заміняємо нулі на числа від 150 до 300
    a[i] = random.randint(150,300)
    seredne += a[i]                         # та одразу додаємо це число в serende для знаходження середьного арифмет.
for j in range(len(a)):
    if a[j] < seredne/len(a):               # якщо число меньше за середє арифметичне то добавляємо його в summa
        summa += a[j]
print('Сумма =',summa)

####################################################################################################################
# 24. Знайти суму елементів масиву цілих чисел, які діляться на 5 і на 8
# одночасно. Розмірність масиву - 30. Заповнення масиву здійснити випадковими
# числами від 500 до 1000.
a = np.zeros(30,dtype=int)                  # масив, 30 елементів, всі нулі
summa = 0
for i in range(len(a)):                     # рандомно замінюємо всі значення від 500 до 1000
    a[i] = random.randint(500,1000)
    if a[i] % 5 == 0 and a[i] % 8 == 0:     # якщо елемент кратний 5 і 8, то добавляємо його в summa
        summa += a[i]
print(summa)

####################################################################################################################
# 25. Знайти добуток елементів лінійного масиву цілих чисел, які кратні 5.
# Розмірність масиву - 10. Заповнення масиву здійснити випадковими числами від 10 до
# 100.
a = np.zeros(10,dtype=int)          # масив, 10 елементів, всі нулі
dobytok = 1
for i in range(len(a)):             # рандомно заміняємо всі нулі на значення від 10 до 100
    a[i] = random.randint(10,100)
    if a[i] % 5 == 0:               # якщо елемент кратний 5, то домножаємо його в dobytok
        dobytok *= a[i]
print('Добуток =',dobytok)

####################################################################################################################
# 26. Напишіть програму аналізу значень температури хворого за добу:
# визначте мінімальне і максимальне значення, середнє арифметичне. Заміри
# температури виробляються шість раз на добу і результати вводяться з клавіатури у
# масив T.
a = np.zeros(6)                 # масив, 6 елементів, всі нулі
seredne = 0
for i in range(len(a)):         # вводимо з клавіатури значення температури
    a[i] = float(input())
    seredne += a[i]             # добавляємо ці значення для знаходження середього
print('Мінімальна:', min(a), 'Максимальна', max(a), 'Середня', seredne/len(a))

####################################################################################################################
# 27. Лінійний масив містить відомості про кількість опадів, що випали за
# кожен з 12 місяців одного року. Складіть програму, що визначає загальну кількість
# опадів протягом цього року, середньомісячну кількість опадів, кількість посушливих
# місяців (коли кількість опадів було менше 30 мм), найпосушливіший місяць року.
a = np.array((15.5, 19.4, 46.5, 51.1, 49, 55.7, 69.5, 57.2, 34, 39.5, 27.9, 24.6))
year = 0
min_30 = 0
min_min = 0
for i in range(len(a)):
    year += a[i]            # добавляємо опади всіх місяців в year
    if min(a) == a[i]:
        min_min = i         # знаходимо найпосушливій індекс (місяц)
    elif a[i] < 30:
        min_30 += 1         # знаходимо кількість посушливих місяців
print('Загальна:',year)
print('Середня:',year/len(a))
print('Посушливих:',min_30)
print('Найпосушливіший:',min_min+1)     # добавляємо 1, так як індексація починаяться з 0

####################################################################################################################
# 28. Знайти кількість парних елементів одновимірного масиву.
a = np.zeros(10)                    # масив, 10 елементів, всі нулі
count = 0
for i in range(len(a)):
    a[i] = random.randint(1,2)      # генеруємо числа від 1 до 2
    if a[i] % 2 == 0:               # якщо елемент кратний 2, то count += 1
        count += 1
print('Кількість парних =', count)

####################################################################################################################
# 29. Знайти кількість парних елементів одновимірного масиву до першого
# зустрінутого числа рівного наперед заданому числу а.
m = np.zeros(10,dtype=int)        # масив, 10 елементів, всі нулі
count = 0
a = int(input())
for i in range(len(m)):
    m[i] = random.randint(1, 10)  # генеруємо в масиві числа від 1 до 10
k = 0
while k != len(m) and m[k] != a:  # цикл працює доти, поки k не вийде за рамки масиву або не стане як 'a'
    if m[k] % 2 == 0:             # перевірка на кратність числа на 2
        count += 1
    k += 1
print(m)
print(count)

####################################################################################################################
# 30. Обчислити середнє арифметичне значення тих елементів одновимірного
# масиву, які розташовані за першим по порядку мінімальним елементом.
a = np.array((23,11,322,79,45,63,7,52,645,756,999))
seredne = 0
min_index = 0
for i in range(len(a)):             # знаходимо індекс найменьшого елементу
    if a[i] == min(a):
        min_index = i
for j in range(min_index):          # добавляємо всі елементи до найменьшого в seredne, для знаходження середнього ариф.
    seredne += a[j]
print('Середнє арифметичне =',seredne/min_index)

####################################################################################################################
# 31. Обчислити середнє арифметичне значення тих елементів одновимірного
# масиву, які потрапляють в інтервал від -2 до 10.
a = np.array((-1, 5, 23, 66, 9, 10, -2, 48, 11, 8, 2))
count = 0
k = 0
for i in range(len(a)):
    if -2 < a[i] < 10:          # якщо елемент меньше 10 та більше -2
        count += a[i]           # ми добавляємо його в count
        k += 1

####################################################################################################################
# 32. Змінній t привласнити значення істина, якщо в одновимірному масиві є
# хоча б одне від’ємне і парне число.
a = np.array((1, 2, 3, 4, 5, 6, -7, -8, 9, 10))
t = False
for i in range(len(a)):             # проходимось по елементах списку
    if a[i] % 2 == 0 and a[i] < 0:  # якщо елемент меньше нуля, та кратний двом, t стає True
        t = True
print(t)

####################################################################################################################
# 33. Заданий масив А (1:20). Знайти добуток всіх його ненульових елементів.
a = np.zeros(20,dtype=int)      # масив, 20 елементів, всі нулі
dobytok = 1
for i in range(len(a)):         # заповнюємо масив з клавіатури
    a[i] = int(input())
    if a[i] != 0:               # якщо елемент не = 0, то домножаємо його в dobytok
        dobytok *= a[i]
print('Добуток =',dobytok)

####################################################################################################################
# 34. Дано два лінійних масиву однакової розмірності. Скласти третій масив з
# добутку елементів перших двох масивів, що стоять на місцях з однаковим індексом.
a = np.zeros(5, dtype=int)      # два масиви, по 5 елементів, всі нулі
b = np.zeros(5, dtype=int)
for i in range(5):              # вводимо значення з клавіатури
    a[i] = int(input())
    b[i] = int(input())
c = np.zeros(5, dtype=int)
for i in range(5):              # добавляємо в c[i] добуток елементів з а і b з однаковими індексами
    c[i] = a[i] * b[i]
print(a, b)
print(c)
